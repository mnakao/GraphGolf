コンパイルに必要なソフトウェア
* MPIライブラリ
* Cコンパイラ

オプション
* -f : 入力グラフの指定．
* -o : 出力グラフの指定．
* -s : 乱数の種（0以上の整数．デフォルトは0）．
* -n : 総計算回数（1以上の整数．デフォルトは10000）．
* -w : 最高温度（0以上の実数．デフォルトは100.0）．
* -c : 最低温度（0以上の実数．デフォルトは0.217147．この値は，SAにおいて最小の改悪を0.01%の確率で受理する値）．
* -g : グループ数（1以上の整数．デフォルトは1）．
* -v : 入力グラフに足される頂点数（0以上の整数．デフォルトは0）．このオプションをつけると，グラフの次数は1つ増える．
* -B : APSPの計算に幅優先探索を用いる
* -D : 最適と考えられる最高温度と最低温度を出力する．
* -H : 山登り法を実行する
* -L : APSPの計算にメモリ量を少なくした隣接行列を使った手法を用いる
* -M : 入力グラフがグルーピングされていると仮定して動作する．
       このオプションは-gを指定して最適化したファイルを出力ファイルとして扱う場合に用いる．
* -N : SAの実行前後に行われるグラフのVerificationを省略する．
* -h : ヘルプメッセージを出力する

実行例
* 頂点数16，次数4のグラフ
$ mpirun -np 1 ./gg -f ./data/n16d4.random.edges

* 頂点数3019，次数30のグラフ
$ mpirun -np 1 ./gg -f ./data/n200d29.random.edges -g 15 -v 19 -o n3019d30.edges
入力グラフの頂点数と次数は200と29である．
グループ数は15であり，さらに頂点数が19足されるため，出力グラフの頂点数は3019になる．
また，次数は1つ増えるため，出力グラフの次数は30になる．

上で出力したグラフを入力グラフとして扱うには，"-M"オプションを追加する．
$ mpirun -np 1 ./gg -f n3019d30.edges -g 15 -v 19 -M -o n3019d30-2.edges

制約条件
* 入力グラフはループおよび多重辺のない単純グラフに限る
